name: Full CI Workflow

env:
  PARENT_IMAGE_TAG: "none"
  TARGET_BRANCH: ""

on:
  workflow_call:
    inputs:
      parent_image_tag:
        required: true
        type: string
      target_branch:
        required: false
        default: ''
        type: string                
  pull_request:
    types: [ opened, reopened, synchronize ]
  schedule:
    - cron: '0 4,10,16 * * 1-5'
  push:
    branches:
      - master
      - main
      - '/feature-.*/'
      - '/JAHIA-[0-9]-[0-9]-[0-9]-X-BRANCH/'
  workflow_dispatch:
    inputs:
      parent_image_tag:
        description: "Tag used by the parent build, 'none' indicates the build has not been triggered from another repository"
        default: 'none'
      target_branch:
        description: 'Target branch for the build step'
        default: ''

jobs:
  # This trick is necessary to be able to join key variables from all workflow triggers (pr, push, dispatch...)
  # Using a dedicated job is overkill but has the advantage of clearly separating the
  # logic of setting up these variables
  vars:
    name: "ee-Set up environment variables"
    runs-on: ubuntu-latest
    outputs:
      parent_image_tag: ${{ steps.vars.outputs.parent_image_tag }}
      target_branch: ${{ steps.vars.outputs.target_branch }}
      version_classifier_suffix: ${{ steps.vars.outputs.version_classifier_suffix }}
    steps:
      - name: Set environment variables from either input parameters or default env
        shell: bash
        run: |
          INPUT_PARENT_IMAGE_TAG=${{ github.event.inputs.parent_image_tag }}
          echo "ENV_PARENT_IMAGE_TAG=${INPUT_PARENT_IMAGE_TAG:-${{ env.PARENT_IMAGE_TAG }}}" >> $GITHUB_ENV
          INPUT_TARGET_BRANCH=${{ github.event.inputs.target_branch }}
          echo "ENV_TARGET_BRANCH=${INPUT_TARGET_BRANCH:-${{ env.TARGET_BRANCH }}}" >> $GITHUB_ENV
          PARENT_VERSION_CLASSIFIER=$(echo "${INPUT_PARENT_IMAGE_TAG}" | awk -F - '{print $2}' )
          if [ "$PARENT_VERSION_CLASSIFIER" != "" ]; then
            PARENT_VERSION_CLASSIFIER_SUFFIX=$(echo "${INPUT_PARENT_IMAGE_TAG}" | awk -F - '{print $3}' )
          else
            PARENT_VERSION_CLASSIFIER_SUFFIX=""
          fi
          echo "PARENT_VERSION_CLASSIFIER_SUFFIX=${PARENT_VERSION_CLASSIFIER_SUFFIX}" >> $GITHUB_ENV
      - id: vars
        name: Set output variables
        shell: bash
        run: |
          echo "parent_image_tag=${{ env.ENV_PARENT_IMAGE_TAG }}" >> $GITHUB_OUTPUT
          echo "target_branch=${{ env.ENV_TARGET_BRANCH }}" >> $GITHUB_OUTPUT
          echo "version_classifier_suffix=${{ env.PARENT_VERSION_CLASSIFIER_SUFFIX }}" >> $GITHUB_OUTPUT
      - name: Display output variables
        shell: bash
        run: |
          echo "ENV_PARENT_IMAGE_TAG = ${{ env.ENV_PARENT_IMAGE_TAG }}"
          echo "ENV_TARGET_BRANCH = ${{ env.ENV_TARGET_BRANCH }}"
          echo "PARENT_VERSION_CLASSIFIER_SUFFIX = ${{ env.PARENT_VERSION_CLASSIFIER_SUFFIX }}"
          echo "steps.vars.outputs.parent_image_tag = ${{ steps.vars.outputs.parent_image_tag}}"
          echo "steps.vars.outputs.target_branch = ${{ steps.vars.outputs.target_branch}}"

  static-analysis:
    name: "ee-Static Analysis (linting, vulns)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Jahia/jahia-modules-action/static-analysis@v2
        with:
          tests_path: docker-tests/

  build:
    name: "ee-build"
    runs-on: ubuntu-latest
    needs: vars
    outputs:
      jahia_version: ${{ steps.tags.outputs.jahia_version }}
      image_tag: ${{ steps.tags.outputs.image_tag }}
      parent_tag: ${{ steps.tags.outputs.parent_tag }}
    steps:
      - id: tags
        name: Set Output variables
        run: |
          echo "::set-output name=jahia_version::8.1.4.0-SNAPSHOT"
          echo "::set-output name=image_tag::8.1.4.0-SNAPSHOT"
          echo "::set-output name=parent_tag::8.1.4.0-SNAPSHOT"
      - name: Display Output variables
        run: |
          echo "OUTPUT: jahia_version = ${{steps.tags.outputs.jahia_version}}"
          echo "OUTPUT: image_tag = ${{steps.tags.outputs.image_tag}}"
          echo "OUTPUT: parent_tag = ${{steps.tags.outputs.parent_tag}}"
      
  expose-docker-artifacts:
    name: "ee-expose-docker-artifacts"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Hello World
        run: |
          echo "Hello world"
 
  integration-tests:
    name: "ee-Integration Tests (Standalone)"
    needs: [ expose-docker-artifacts, build ]
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Hello World
        run: |
          echo "Hello world"

  sonar:
    name: "ee-sonar"
    runs-on: ubuntu-latest
    needs: [ vars, build ]
    steps:
      - name: Hello World
        run: |
          echo "Hello world"